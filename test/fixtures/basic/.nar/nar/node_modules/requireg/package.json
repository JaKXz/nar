{
  "name": "requireg",
  "version": "0.1.3",
  "description": "Require global modules like a boss",
  "homepage": "http://github.com/h2non/requireg",
  "bugs": {
    "url": "https://github.com/h2non/requireg/issues"
  },
  "contributors": [
    {
      "name": "Tomas Aparicio",
      "email": "tomas@aparicio.me"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/h2non/requireg.git"
  },
  "licenses": "MIT",
  "main": "lib/requireg",
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "global",
    "npm",
    "modules",
    "module",
    "require",
    "import"
  ],
  "dependencies": {
    "resolve": "~0.6.1"
  },
  "devDependencies": {
    "mocha": "~1.15.1",
    "expect.js": "~0.2.0",
    "semver": "~2.2.1"
  },
  "readme": "# requireg \n[![Build Status](https://secure.travis-ci.org/h2non/requireg.png?branch=master)][2]\n[![NPM version](https://badge.fury.io/js/requireg.png)][3]\n\n> Require global modules in node.js like a boss\n\n## Differences with require()\n\n`requireg` tries to find modules in global locations which are\nnot natively supported by the node.js [module resolve algorithm][1]. \n\nSupported locations:\n\n- $HOME/node_modules (instead of $HOME/.node_modules)\n- $HOME/node_libraries (instead of $HOME/.node_libraries)\n- $HOME/node_packages (specific of `requireg`)\n- $PREFIX/lib/node_modules (instead of $PREFIX/lib/node)\n- $NODE_MODULES (use the specific modules path environment variable)\n\n## Resolution priority\n\n1. Resolve via native `require()`\n2. User home directory (`$HOME` or `%USERPROFILE%`)\n3. Node installation path\n4. $NODE_MODULES (can have different multiple paths, semicolon separated)\n5. Common operative system installation paths\n\n## Installation\n\n```\n$ npm install requireg --save[-dev]\n```\n\n## Usage\n\n### Load global modules\n\n```js\nvar requireg = require('requireg')\n// require a globally installed package\nvar npm = requireg('npm')\n```\n\n### Resolve module path\n\n```js\nvar modulePath = requireg.resolve('npm')\n// returns '/usr/local/lib/node_modules/npm/lib/npm.js'\n```\n\n### Globalize it\n\n```js\nrequire('requireg').globalize()\n```\n\nNow it is globally available from any source file\n\n```js\nvar globalModule = requireg('npm')\n```\n\n### Module not found\n\n`requireg` maintains the same behavior as the native `require()`. \nIt will throw an `Error` exception if the module was not found\n\n## Considerations\n\n- Require global modules in node.js are considered anti-pattern. \nNote that you can experiment unreliability or inconsistency across different environments.\nI hope you know exactly what you do with `requireg`\n- Only node packages installed with [NPM](https://npmjs.org) are supported (which means only standardized NPM paths are supported)\n\n## Wish list\n\n- Custom environment variable with custom path to resolve global modules\n- Possible configuration object (force to use only global modules...)\n\n## License\n\nReleased under MIT license\n\n[1]: http://nodejs.org/docs/latest/api/modules.html#modules_all_together\n[2]: http://travis-ci.org/h2non/requireg\n[3]: http://badge.fury.io/js/requireg\n\n",
  "readmeFilename": "README.md",
  "_id": "requireg@0.1.3",
  "_from": "requireg@~0.1.3"
}
